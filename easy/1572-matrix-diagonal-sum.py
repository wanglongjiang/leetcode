'''
1572. 矩阵对角线元素的和
给你一个正方形矩阵 mat，请你返回矩阵对角线元素的和。

请你返回在矩阵主对角线上的元素和副对角线上且不在主对角线上元素的和。

 

示例  1：



输入：mat = [[1,2,3],
            [4,5,6],
            [7,8,9]]
输出：25
解释：对角线的和为：1 + 5 + 9 + 3 + 7 = 25
请注意，元素 mat[1][1] = 5 只会被计算一次。
示例  2：

输入：mat = [[1,1,1,1],
            [1,1,1,1],
            [1,1,1,1],
            [1,1,1,1]]
输出：8
示例 3：

输入：mat = [[5]]
输出：5
 

提示：

n == mat.length == mat[i].length
1 <= n <= 100
1 <= mat[i][j] <= 100
'''
from typing import List
'''
思路：矩阵
反斜线的坐标为0,0  -  n-1,n-1
正斜线的坐标为0,n-1  -  n-1,0
合计2个对角线的元素和，如果矩阵长度为奇数，最中心的元素会被累计2次，需要减掉一次

时间复杂度：O(n)
空间复杂度：O(1)
'''


class Solution:
    def diagonalSum(self, mat: List[List[int]]) -> int:
        n = len(mat)
        ans = 0
        for i in range(n):
            ans += mat[i][i] + mat[i][n - i - 1]
        if n % 2:
            ans -= mat[n // 2][n // 2]
        return ans
