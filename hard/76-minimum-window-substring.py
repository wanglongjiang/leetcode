'''
最小覆盖子串
给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 "" 。

注意：如果 s 中存在这样的子串，我们保证它是唯一的答案。
'''
'''
思路：滑动窗口
题目中未能确认是涵盖t中所有字符的set还是数量也要匹配
暂定认为是涵盖t中所有字符的set(t)，这样算法简单点。（数量也要匹配的算法思路是一致的，细节上要复杂）
1、先遍历t，得到所有字符的set(t)
2、遍历s，设置left，right2个指针：
    2.1首先向右移动right指针，直至left，right之间的字符集涵盖set(t)，或right-left<子串最小长度（初始为s的长度-1）时退出
    2.2然后向右移动left，如果保持涵盖set(t)，缩小最小长度，直至不满足涵盖set(t)，将此时的最小长度、子串左右坐标记录下来
    回到上面过程2.1继续执行
'''


class Solution:
    def minWindow(self, s: str, t: str) -> str:
        pass
